/*
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
 * in compliance with the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under the License
 * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing permissions and limitations under
 * the License.
 */
/*
 * This code was generated by https://code.google.com/p/google-apis-client-generator/
 * Modify at your own risk.
 */

package com.google.api.services.genomics.model;

/**
 * A Job represents an ongoing process which can be monitored for status information.
 *
 * <p> This is the Java data model class that specifies how to parse/serialize into the JSON that is
 * transmitted over HTTP when working with the Genomics API. For a detailed explanation see:
 * <a href="http://code.google.com/p/google-http-java-client/wiki/JSON">http://code.google.com/p/google-http-java-client/wiki/JSON</a>
 * </p>
 *
 */
@SuppressWarnings("javadoc")
public final class Job extends com.google.api.client.json.GenericJson {

  /**
   * A more detailed description of this job's current status.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String description;

  /**
   * The job ID.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String id;

  /**
   * If this Job represents an import, this field will contain the IDs of the objects which were
   * successfully imported.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.util.List<java.lang.String> importedIds;

  /**
   * The Google Cloud Console project number that this job belongs to.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key @com.google.api.client.json.JsonString
  private java.lang.Long projectId;

  /**
   * The status of this job.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String status;

  /**
   * A more detailed description of this job's current status.
   * @return value or {@code null} for none
   */
  public java.lang.String getDescription() {
    return description;
  }

  /**
   * A more detailed description of this job's current status.
   * @param description description or {@code null} for none
   */
  public Job setDescription(java.lang.String description) {
    this.description = description;
    return this;
  }

  /**
   * The job ID.
   * @return value or {@code null} for none
   */
  public java.lang.String getId() {
    return id;
  }

  /**
   * The job ID.
   * @param id id or {@code null} for none
   */
  public Job setId(java.lang.String id) {
    this.id = id;
    return this;
  }

  /**
   * If this Job represents an import, this field will contain the IDs of the objects which were
   * successfully imported.
   * @return value or {@code null} for none
   */
  public java.util.List<java.lang.String> getImportedIds() {
    return importedIds;
  }

  /**
   * If this Job represents an import, this field will contain the IDs of the objects which were
   * successfully imported.
   * @param importedIds importedIds or {@code null} for none
   */
  public Job setImportedIds(java.util.List<java.lang.String> importedIds) {
    this.importedIds = importedIds;
    return this;
  }

  /**
   * The Google Cloud Console project number that this job belongs to.
   * @return value or {@code null} for none
   */
  public java.lang.Long getProjectId() {
    return projectId;
  }

  /**
   * The Google Cloud Console project number that this job belongs to.
   * @param projectId projectId or {@code null} for none
   */
  public Job setProjectId(java.lang.Long projectId) {
    this.projectId = projectId;
    return this;
  }

  /**
   * The status of this job.
   * @return value or {@code null} for none
   */
  public java.lang.String getStatus() {
    return status;
  }

  /**
   * The status of this job.
   * @param status status or {@code null} for none
   */
  public Job setStatus(java.lang.String status) {
    this.status = status;
    return this;
  }

  @Override
  public Job set(String fieldName, Object value) {
    return (Job) super.set(fieldName, value);
  }

  @Override
  public Job clone() {
    return (Job) super.clone();
  }

}

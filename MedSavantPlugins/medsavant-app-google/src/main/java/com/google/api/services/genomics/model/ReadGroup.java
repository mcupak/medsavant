/*
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
 * in compliance with the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under the License
 * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing permissions and limitations under
 * the License.
 */
/*
 * This code was generated by https://code.google.com/p/google-apis-client-generator/
 * Modify at your own risk.
 */

package com.google.api.services.genomics.model;

/**
 * Model definition for ReadGroup.
 *
 * <p> This is the Java data model class that specifies how to parse/serialize into the JSON that is
 * transmitted over HTTP when working with the Genomics API. For a detailed explanation see:
 * <a href="http://code.google.com/p/google-http-java-client/wiki/JSON">http://code.google.com/p/google-http-java-client/wiki/JSON</a>
 * </p>
 *
 */
@SuppressWarnings("javadoc")
public final class ReadGroup extends com.google.api.client.json.GenericJson {

  /**
   * (DT) Date the run was produced (ISO8601 date or date/time.)
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String date;

  /**
   * (DS) Description.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String description;

  /**
   * (FO) Flow order. The array of nucleotide bases that correspond to the nucleotides used for each
   * flow of each read.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String flowOrder;

  /**
   * (ID) Read group identifier.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String id;

  /**
   * (KS) The array of nucleotide bases that correspond to the key sequence of each read.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String keySequence;

  /**
   * (LS) Library.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String library;

  /**
   * (PU) Platform unit.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String platformUnit;

  /**
   * (PI) Predicted median insert size.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.Integer predictedInsertSize;

  /**
   * (PG) Programs used for processing the read group.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String processingProgram;

  /**
   * (SM) Sample.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String sample;

  /**
   * (CN) Name of sequencing center producing the read.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String sequencingCenterName;

  /**
   * (PL) Platform/technology used to produce the reads.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String sequencingTechnology;

  /**
   * (DT) Date the run was produced (ISO8601 date or date/time.)
   * @return value or {@code null} for none
   */
  public java.lang.String getDate() {
    return date;
  }

  /**
   * (DT) Date the run was produced (ISO8601 date or date/time.)
   * @param date date or {@code null} for none
   */
  public ReadGroup setDate(java.lang.String date) {
    this.date = date;
    return this;
  }

  /**
   * (DS) Description.
   * @return value or {@code null} for none
   */
  public java.lang.String getDescription() {
    return description;
  }

  /**
   * (DS) Description.
   * @param description description or {@code null} for none
   */
  public ReadGroup setDescription(java.lang.String description) {
    this.description = description;
    return this;
  }

  /**
   * (FO) Flow order. The array of nucleotide bases that correspond to the nucleotides used for each
   * flow of each read.
   * @return value or {@code null} for none
   */
  public java.lang.String getFlowOrder() {
    return flowOrder;
  }

  /**
   * (FO) Flow order. The array of nucleotide bases that correspond to the nucleotides used for each
   * flow of each read.
   * @param flowOrder flowOrder or {@code null} for none
   */
  public ReadGroup setFlowOrder(java.lang.String flowOrder) {
    this.flowOrder = flowOrder;
    return this;
  }

  /**
   * (ID) Read group identifier.
   * @return value or {@code null} for none
   */
  public java.lang.String getId() {
    return id;
  }

  /**
   * (ID) Read group identifier.
   * @param id id or {@code null} for none
   */
  public ReadGroup setId(java.lang.String id) {
    this.id = id;
    return this;
  }

  /**
   * (KS) The array of nucleotide bases that correspond to the key sequence of each read.
   * @return value or {@code null} for none
   */
  public java.lang.String getKeySequence() {
    return keySequence;
  }

  /**
   * (KS) The array of nucleotide bases that correspond to the key sequence of each read.
   * @param keySequence keySequence or {@code null} for none
   */
  public ReadGroup setKeySequence(java.lang.String keySequence) {
    this.keySequence = keySequence;
    return this;
  }

  /**
   * (LS) Library.
   * @return value or {@code null} for none
   */
  public java.lang.String getLibrary() {
    return library;
  }

  /**
   * (LS) Library.
   * @param library library or {@code null} for none
   */
  public ReadGroup setLibrary(java.lang.String library) {
    this.library = library;
    return this;
  }

  /**
   * (PU) Platform unit.
   * @return value or {@code null} for none
   */
  public java.lang.String getPlatformUnit() {
    return platformUnit;
  }

  /**
   * (PU) Platform unit.
   * @param platformUnit platformUnit or {@code null} for none
   */
  public ReadGroup setPlatformUnit(java.lang.String platformUnit) {
    this.platformUnit = platformUnit;
    return this;
  }

  /**
   * (PI) Predicted median insert size.
   * @return value or {@code null} for none
   */
  public java.lang.Integer getPredictedInsertSize() {
    return predictedInsertSize;
  }

  /**
   * (PI) Predicted median insert size.
   * @param predictedInsertSize predictedInsertSize or {@code null} for none
   */
  public ReadGroup setPredictedInsertSize(java.lang.Integer predictedInsertSize) {
    this.predictedInsertSize = predictedInsertSize;
    return this;
  }

  /**
   * (PG) Programs used for processing the read group.
   * @return value or {@code null} for none
   */
  public java.lang.String getProcessingProgram() {
    return processingProgram;
  }

  /**
   * (PG) Programs used for processing the read group.
   * @param processingProgram processingProgram or {@code null} for none
   */
  public ReadGroup setProcessingProgram(java.lang.String processingProgram) {
    this.processingProgram = processingProgram;
    return this;
  }

  /**
   * (SM) Sample.
   * @return value or {@code null} for none
   */
  public java.lang.String getSample() {
    return sample;
  }

  /**
   * (SM) Sample.
   * @param sample sample or {@code null} for none
   */
  public ReadGroup setSample(java.lang.String sample) {
    this.sample = sample;
    return this;
  }

  /**
   * (CN) Name of sequencing center producing the read.
   * @return value or {@code null} for none
   */
  public java.lang.String getSequencingCenterName() {
    return sequencingCenterName;
  }

  /**
   * (CN) Name of sequencing center producing the read.
   * @param sequencingCenterName sequencingCenterName or {@code null} for none
   */
  public ReadGroup setSequencingCenterName(java.lang.String sequencingCenterName) {
    this.sequencingCenterName = sequencingCenterName;
    return this;
  }

  /**
   * (PL) Platform/technology used to produce the reads.
   * @return value or {@code null} for none
   */
  public java.lang.String getSequencingTechnology() {
    return sequencingTechnology;
  }

  /**
   * (PL) Platform/technology used to produce the reads.
   * @param sequencingTechnology sequencingTechnology or {@code null} for none
   */
  public ReadGroup setSequencingTechnology(java.lang.String sequencingTechnology) {
    this.sequencingTechnology = sequencingTechnology;
    return this;
  }

  @Override
  public ReadGroup set(String fieldName, Object value) {
    return (ReadGroup) super.set(fieldName, value);
  }

  @Override
  public ReadGroup clone() {
    return (ReadGroup) super.clone();
  }

}

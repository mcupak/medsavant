package jannovar.annotation;


import java.io.File;
import java.io.FileOutputStream;
import java.io.IOException;
import java.io.PrintStream;

import java.util.ArrayList;
import java.util.HashMap;

/* serialization */
import java.io.ObjectInputStream;
import java.io.FileInputStream;
import java.io.IOException;


import jannovar.exception.JannovarException;
import jannovar.io.SerializationManager;
import jannovar.io.UCSCKGParser;
import jannovar.common.Constants;
import jannovar.common.VariantType;
import jannovar.reference.TranscriptModel;
import jannovar.reference.Chromosome;
import jannovar.annotation.Annotation;
import jannovar.annotation.AnnotationList;
import jannovar.exome.Variant;
import jannovar.exception.AnnotationException;


import org.junit.Test;
import org.junit.AfterClass;
import org.junit.BeforeClass;
import org.junit.Assert;


/**
 * This class is intended to perform unuit testing on variants that
 * are intergenic. 
 */
public class IntergenicAnnotationTest implements Constants {

    
   
    private static HashMap<Byte,Chromosome> chromosomeMap = null;

    @BeforeClass 
	public static void setUp() throws IOException, JannovarException {
	ArrayList<TranscriptModel> kgList=null;
	java.net.URL url = SynonymousAnnotationTest.class.getResource(UCSCserializationTestFileName);
	String path = url.getPath();
	SerializationManager manager = new SerializationManager();
	kgList = manager.deserializeKnownGeneList(path);
	chromosomeMap = Chromosome.constructChromosomeMapWithIntervalTree(kgList);
    }

    @AfterClass public static void releaseResources() { 
	chromosomeMap = null;
	System.gc();
    }

    /**
     * The variant is
     *<P>
     * 1	753405	753405	C	T
     *<P>
     * annovar's annotation is intergenic	LOC100288069(dist=39337),LINC00115(dist=8181)
     * This one was done by hand, the following test cases
     * were generated by a perl script.
     */
    @Test public void testIntergenicVarA() throws AnnotationException, JannovarException  {
	byte chr = 1;
	int pos = 753405;
	String ref = "C";
	String alt = "T";
	Chromosome c = chromosomeMap.get(chr); 
	if (c==null) {
	    Assert.fail("Could not identify chromosome \"" + chr + "\"");
	} else {
	    AnnotationList ann = c.getAnnotationList(pos,ref,alt);
	    VariantType varType = ann.getVariantType();
	    Assert.assertEquals(VariantType.INTERGENIC,varType);
	    String annot = ann.getVariantAnnotation();
	    Assert.assertEquals("LOC100288069(dist=39337),LINC00115(dist=8181)",annot);
	    
	}
    }


/**
 *<P>
 * annovar: POTEKP
 * chr2:132349413G>A
 *</P>
 */
@Test public void testNcRnaExonicVar79() throws AnnotationException, JannovarException  {
	byte chr = 2;
	int pos = 132349413;
	String ref = "G";
	String alt = "A";
	Chromosome c = chromosomeMap.get(chr); 
	if (c==null) {
	    Assert.fail("Could not identify chromosome \"" + chr + "\"");
	} else {
	    AnnotationList ann = c.getAnnotationList(pos,ref,alt);
	    VariantType varType = ann.getVariantType();
	    Assert.assertEquals(VariantType.INTERGENIC,varType);
	    String annot = ann.getVariantAnnotation();
	    Assert.assertEquals("CCDC74A(dist=58174),RNU6-81P(dist=11028)",annot);
	}
}


/**
 *<P>
 * annovar: AK025975(dist=42221),LOC729059(dist=47759)
 * chr1:23289568T>C
 *</P>
 */
@Test public void testIntergenicVar10() throws AnnotationException, JannovarException  {
	byte chr = 1;
	int pos = 23289568;
	String ref = "T";
	String alt = "C";
	Chromosome c = chromosomeMap.get(chr); 
	if (c==null) {
	    Assert.fail("Could not identify chromosome \"" + chr + "\"");
	} else {
	    AnnotationList ann = c.getAnnotationList(pos,ref,alt);
	    VariantType varType = ann.getVariantType();
	    Assert.assertEquals(VariantType.INTERGENIC,varType);
	    String annot = ann.getVariantAnnotation();
	    Assert.assertEquals("AK025975(dist=42221),LOC729059(dist=47759)",annot);
	}
}

/**
 *<P>
 * annovar: HSP90AB3P
 * chr4:88815223C>T
 *</P>
 */
@Test public void testDownstreamVar40() throws AnnotationException, JannovarException  {
	byte chr = 4;
	int pos = 88815223;
	String ref = "C";
	String alt = "T";
	Chromosome c = chromosomeMap.get(chr); 
	if (c==null) {
	    Assert.fail("Could not identify chromosome \"" + chr + "\"");
	} else {
	   
	    /* There should be just one annotation */
	   
	   
	    AnnotationList ann = c.getAnnotationList(pos,ref,alt);
	    VariantType varType = ann.getVariantType();
	    String annot = ann.getVariantAnnotation();
	    Assert.assertEquals(VariantType.INTERGENIC,varType);
	    Assert.assertEquals("MEPE(dist=47255),SPP1(dist=81579)",annot);
	}
}


/**
 *<P>
 * annovar: RASAL2(dist=14943),C1orf49(dist=18621)
 * chr1:178463591C>T
 *</P>
 */
@Test public void testIntergenicVar35() throws AnnotationException, JannovarException  {
	byte chr = 1;
	int pos = 178463591;
	String ref = "C";
	String alt = "T";
	Chromosome c = chromosomeMap.get(chr); 
	if (c==null) {
	    Assert.fail("Could not identify chromosome \"" + chr + "\"");
	} else {
	    AnnotationList ann = c.getAnnotationList(pos,ref,alt);
	    VariantType varType = ann.getVariantType();
	    Assert.assertEquals(VariantType.INTERGENIC,varType);
	    String annot = ann.getVariantAnnotation();
	    Assert.assertEquals("RASAL2(dist=14943),TEX35(dist=18621)",annot);
	}
}

/**
 *<P>
 * annovar: FLJ23867(dist=10810),TRNA_Val(dist=3607)
 * chr1:180180669A>G
 *</P>
 */
@Test public void testIntergenicVar37() throws AnnotationException, JannovarException  {
	byte chr = 1;
	int pos = 180180669;
	String ref = "A";
	String alt = "G";
	Chromosome c = chromosomeMap.get(chr); 
	if (c==null) {
	    Assert.fail("Could not identify chromosome \"" + chr + "\"");
	} else {
	    AnnotationList ann = c.getAnnotationList(pos,ref,alt);
	    VariantType varType = ann.getVariantType();
	    Assert.assertEquals(VariantType.INTERGENIC,varType);
	    String annot = ann.getVariantAnnotation();
	    Assert.assertEquals("FLJ23867(dist=10810),TRNA_Val(dist=3607)",annot);
	}
}

/**
 *<P>
 * annovar: GJC2(dist=4633),IBA57(dist=1269)
 * chr1:228352160T>C
 *</P>
 */
@Test public void testIntergenicVar45() throws AnnotationException, JannovarException  {
	byte chr = 1;
	int pos = 228352160;
	String ref = "T";
	String alt = "C";
	Chromosome c = chromosomeMap.get(chr); 
	if (c==null) {
	    Assert.fail("Could not identify chromosome \"" + chr + "\"");
	} else {
	    AnnotationList ann = c.getAnnotationList(pos,ref,alt);
	    VariantType varType = ann.getVariantType();
	    Assert.assertEquals(VariantType.INTERGENIC,varType);
	    String annot = ann.getVariantAnnotation();
	    Assert.assertEquals("GJC2(dist=4633),IBA57(dist=1269)",annot);
	}
}

/**
 *<P>
 * annovar: TRIM43B(dist=35235),AK055967(dist=6685)
 * chr2:96185714C>T
 *</P>
 */
@Test public void testIntergenicVar69() throws AnnotationException, JannovarException  {
	byte chr = 2;
	int pos = 96185714;
	String ref = "C";
	String alt = "T";
	Chromosome c = chromosomeMap.get(chr); 
	if (c==null) {
	    Assert.fail("Could not identify chromosome \"" + chr + "\"");
	} else {
	    AnnotationList ann = c.getAnnotationList(pos,ref,alt);
	    VariantType varType = ann.getVariantType();
	    Assert.assertEquals(VariantType.INTERGENIC,varType);
	    String annot = ann.getVariantAnnotation();
	    Assert.assertEquals("TRIM43B(dist=35235),AK055967(dist=6685)",annot);
	}
}

/**
 *<P>
 * annovar: NMS(dist=26382),PDCL3(dist=53294)
 * chr2:101126124T>A
 *</P>
 */
@Test public void testIntergenicVar74() throws AnnotationException, JannovarException  {
	byte chr = 2;
	int pos = 101126124;
	String ref = "T";
	String alt = "A";
	Chromosome c = chromosomeMap.get(chr); 
	if (c==null) {
	    Assert.fail("Could not identify chromosome \"" + chr + "\"");
	} else {
	    AnnotationList ann = c.getAnnotationList(pos,ref,alt);
	    VariantType varType = ann.getVariantType();
	    Assert.assertEquals(VariantType.INTERGENIC,varType);
	    String annot = ann.getVariantAnnotation();
	    Assert.assertEquals("NMS(dist=26382),PDCL3(dist=53294)",annot);
	}
}

/**
 *<P>
 * annovar: SLC20A1(dist=6667),NT5DC4(dist=50996)
 * chr2:113428067A>T
 *</P>
 */
@Test public void testIntergenicVar76() throws AnnotationException, JannovarException  {
	byte chr = 2;
	int pos = 113428067;
	String ref = "A";
	String alt = "T";
	Chromosome c = chromosomeMap.get(chr); 
	if (c==null) {
	    Assert.fail("Could not identify chromosome \"" + chr + "\"");
	} else {
	    AnnotationList ann = c.getAnnotationList(pos,ref,alt);
	    VariantType varType = ann.getVariantType();
	    Assert.assertEquals(VariantType.INTERGENIC,varType);
	    String annot = ann.getVariantAnnotation();
	    Assert.assertEquals("SLC20A1(dist=6667),NT5DC4(dist=50996)",annot);
	}
}

/**
 *<P>
 * annovar: GLI2(dist=42566),TFCP2L1(dist=181369)
 * chr2:121792795G>A
 *</P>
 */
@Test public void testIntergenicVar79() throws AnnotationException, JannovarException  {
	byte chr = 2;
	int pos = 121792795;
	String ref = "G";
	String alt = "A";
	Chromosome c = chromosomeMap.get(chr); 
	if (c==null) {
	    Assert.fail("Could not identify chromosome \"" + chr + "\"");
	} else {
	    AnnotationList ann = c.getAnnotationList(pos,ref,alt);
	    VariantType varType = ann.getVariantType();
	    Assert.assertEquals(VariantType.INTERGENIC,varType);
	    String annot = ann.getVariantAnnotation();
	    Assert.assertEquals("GLI2(dist=42566),TFCP2L1(dist=181369)",annot);
	}
}

/**
 *<P>
 * annovar: CCL20(dist=52556),WDR69(dist=1491)
 * chr2:228734836T>A
 *</P>
 */
@Test public void testIntergenicVar99() throws AnnotationException, JannovarException  {
	byte chr = 2;
	int pos = 228734836;
	String ref = "T";
	String alt = "A";
	Chromosome c = chromosomeMap.get(chr); 
	if (c==null) {
	    Assert.fail("Could not identify chromosome \"" + chr + "\"");
	} else {
	    AnnotationList ann = c.getAnnotationList(pos,ref,alt);
	    VariantType varType = ann.getVariantType();
	    Assert.assertEquals(VariantType.INTERGENIC,varType);
	    String annot = ann.getVariantAnnotation();
	    Assert.assertEquals("CCL20(dist=52556),DAW1(dist=1491)",annot);
	}
}

/**
 *<P>
 * annovar: ARMC9(dist=15624),MIR4777(dist=1881)
 * chr2:232225538->G
 *</P>
 --- according to uscs browser actually 3UTR
@Test public void testIntergenicVar101() throws AnnotationException, JannovarException  {
	byte chr = 2;
	int pos = 232225538;
	String ref = "-";
	String alt = "G";
	Chromosome c = chromosomeMap.get(chr); 
	if (c==null) {
	    Assert.fail("Could not identify chromosome \"" + chr + "\"");
	} else {
	    AnnotationList ann = c.getAnnotationList(pos,ref,alt);
	    VariantType varType = ann.getVarType();
	    Assert.assertEquals(VariantType.INTERGENIC,varType);
	    String annot = ann.getVariantAnnotation();
	    Assert.assertEquals("ARMC9(dist=15624),MIR4777(dist=1881)",annot);
	}
}
*/
/**
 *<P>
 * annovar: TRNA_Glu(dist=17996),MIR548I1(dist=78003)
 * chr3:125431244G>A
 *</P>
 */
@Test public void testIntergenicVar123() throws AnnotationException, JannovarException  {
	byte chr = 3;
	int pos = 125431244;
	String ref = "G";
	String alt = "A";
	Chromosome c = chromosomeMap.get(chr); 
	if (c==null) {
	    Assert.fail("Could not identify chromosome \"" + chr + "\"");
	} else {
	    AnnotationList ann = c.getAnnotationList(pos,ref,alt);
	    VariantType varType = ann.getVariantType();
	    Assert.assertEquals(VariantType.INTERGENIC,varType);
	    String annot = ann.getVariantAnnotation();
	    Assert.assertEquals("TRNA_Glu(dist=17996),MIR548I1(dist=78003)",annot);
	}
}


}